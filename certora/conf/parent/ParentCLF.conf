{
    "files": [
       "./certora/harness/ParentCLFHarness.sol",
       "./test/mocks/MockCCIPRouter.sol",
       "lib/chainlink/contracts/src/v0.8/shared/token/ERC677/LinkToken.sol",
       "./test/mocks/MockUsdc.sol",
       "./test/mocks/MockAavePool.sol",
       "./test/mocks/MockAToken.sol",
       "./test/mocks/MockComet.sol",
       "./src/token/Share.sol",
       "./test/mocks/MockFunctionsRouter.sol",
       "./test/mocks/MockPoolAddressesProvider.sol",
    ],
    
    "verify": "ParentCLFHarness:./certora/spec/parent/ParentCLF.spec",
    "wait_for_results": "all",
    "msg": "Verification of ParentCLF",
    "rule_sanity": "basic",
    "optimistic_loop": true,
    "optimistic_fallback": true,
    "optimistic_hashing": true,
    "link": [
        "ParentCLFHarness:i_ccipRouter=MockCCIPRouter",
        "ParentCLFHarness:i_link=LinkToken",
        "ParentCLFHarness:i_usdc=MockUsdc",
        "ParentCLFHarness:i_aavePoolAddressesProvider=MockPoolAddressesProvider",
        "ParentCLFHarness:i_comet=MockComet",
        "MockAToken:i_aavePool=MockAavePool",
        "ParentCLFHarness:i_share=Share",
        "ParentCLFHarness:i_functionsRouter=MockFunctionsRouter",
        "MockPoolAddressesProvider:i_pool=MockAavePool",
        "MockAavePool:s_aToken=MockAToken",
    ],
    "parametric_contracts": "ParentCLFHarness",
    "mutations": {
        "gambit": {
            "filename": "./src/peers/extensions/ParentCLF.sol"
        }
    },
}