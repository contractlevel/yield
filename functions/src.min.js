(async () => {if(!secrets.api)throw Error('no API');const c={Arbitrum:'4949039107694359620',Ethereum:'5009297550715157269',Base:'15971525489660198786',Optimism:'3734403246176062136'};try{const r=await Functions.makeHttpRequest({url:secrets.api,method:'POST',headers:{'Content-Type':'application/json'},data:{symbol:'USDC',projects:['aave-v3','compound-v3'],chains:Object.keys(c)},timeout:9000});if(r.error||!r.data||!r.data.chain)return Functions.encodeString(JSON.stringify(r));const p=r.data;if(!Object.keys(c).includes(p.chain)||!['aave-v3','compound-v3'].includes(p.project)){const s=Functions.encodeUint256(BigInt(0)),e=Functions.encodeUint256(0),t=new Uint8Array(64);return t.set(s,0),t.set(e,32),t}const e=p.project==='aave-v3'?0:1,s=Functions.encodeUint256(BigInt(c[p.chain]||'0')),t=new Uint8Array(64);return t.set(s,0),t.set(e,32),t}catch(e){return Functions.encodeString(e.message)}})();